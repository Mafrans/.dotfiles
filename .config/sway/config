

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term kitty
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.

#set $menu tofi-drun | xargs swaymsg exec --
set $menu LD_LIBRARY_PATH="/usr/local/lib" walker 
set $background ~/.config/sway/backgrounds/celeste-1.png

gaps inner 0

workspace 1 output eDP-1

### Wallpaper
output eDP-1 {
    bg $background fill
    scale 1.5
}

exec 'LD_LIBRARY_PATH="/usr/local/lib" walker --gapplication-service'

exec swayidle -w \
  timeout 240 "$lock" \
  before-sleep "$lock"

### Walker service

set $lock swaylock --grace 10 --datestr "%m/%d/%Y" \
            --screenshots --effect-blur 30x2 --effect-vignette 0.6:0.4 \
            --clock --indicator-idle-visible --font 'FiraCode Nerd Font' --font-size 20 \
            --bs-hl-color  FF5555   --key-hl-color     50FA7B   --indicator-thickness 25 --indicator-radius 110 \
            --inside-color 00000000 --inside-ver-color 00000000 --inside-wrong-color 00000000 \
            --line-color   00000000 --line-ver-color   00000000 --line-wrong-color   00000000 --separator-color 00000000 \
            --ring-color   50FA7B60 --ring-ver-color   BD93F960 --ring-wrong-color   FF555560 \
            --text-color   FFFFFF   --text-ver-color   BD93F9   --text-wrong-color   FF5555 --layout-bg-color 00000000
#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs

### Idle configuration
#
# Example configuration:
#
# exec swayidle -w \
#          timeout 10 'swaylock -f -c 000000' \
##          timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
#          before-sleep 'swaylock -f -c 000000'
#
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

### Some programs should float
for_window [app_id="org.gnome.Settings"] floating enable
for_window [class="discord"] floating enable
for_window [class="Steam"] floating enable
for_window [instance="Godot_ProjectList"] floating enable
for_window [title="Save Scene As..."] floating enable
for_window [class="ONLYOFFICE Desktop Editors"] floating enable
for_window [class="qBittorrent"] floating enable
for_window [class="FLTK"] floating enable
for_window [class="Tk"] floating enable
for_window [app_id="pavucontrol"] floating enable
for_window [title="Bitwarden"] floating enable
for_window [title="Picture in picture"] floating enable

for_window [app_id=".*"] {
    border default 0
}

# Godot Windows
for_window [instance="Godot_ProjectList"] floating enable
for_window [title="Save Scene As..."] floating enable
for_window [title="Please Confirm..."] floating enable
for_window [title="Create Folder"] floating enable
for_window [title="Create New Node"] floating enable
for_window [title="Create Script"] floating enable
for_window [title="Inherit Object"] floating enable

client.focused_inactive #1e293b #1e293b #64748b
client.background #1e293b #1e293b #64748b
client.unfocused #1e293b #1e293b #64748b
client.focused #475569 #475569 #f1f5f9

### Clipboard
exec wl-paste -t text --watch clipman store --no-persist


### Input devices
input "type:keyboard" {
    xkb_layout eu,us,se
}

input "type:pointer" {
    pointer_accel 0.25
    accel_profile flat
}

input "type:touchpad" {
    click_method clickfinger
    pointer_accel 0.25
    accel_profile adaptive
    tap enabled
}

### Key bindings

# Play/pause key 
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl next
bindsym XF86AudioPrev exec playerctl previous

# Start a terminal
bindsym $mod+Return exec $term
# Kill focused window
bindsym $mod+Shift+q kill
# Start launcher
bindsym $mod+d exec $menu
# Take a screenshot
bindsym $mod+Shift+s exec grimblast copy area
bindsym $mod+Shift+a exec grimblast copy screen
bindsym $mod+Ctrl+s exec slurp -p | grim -g - - | convert - txt: | awk 'NR==2 { print $3 }' | wl-copy -n
# Switch keyboard layout
bindsym $mod+Space input type:keyboard xkb_switch_layout next
bindsym $mod+Period exec cat ~/.config/sway/emojis.txt | tofi --font="FiraCode Nerd Font" | sed 's/ .*//' | wl-copy -n
bindsym $mod+Ctrl+l exec $lock

# Drag floating windows by holding down $mod and left mouse button.
# Resize them with right mouse button + $mod.
# Despite the name, also works for non-floating windows.
# Change normal to inverse to use left mouse button for resizing and right
# mouse button for dragging.
floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+r reload

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'You pressed the exit shortcut. Do you really want to exit sway? This will end your Wayland session.' -B 'Yes, exit sway' 'swaymsg exit'
    
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right
    
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5
bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10

# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5
bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10

# Split current focus horizontally/vertically
bindsym $mod+b splith
bindsym $mod+v splitv

# Switch the current container between different layout styles
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# Make the current focus fullscreen
bindsym $mod+f fullscreen

# Toggle the current focus between tiling and floating mode
bindsym $mod+Shift+space floating toggle

# Move focus to the parent container
bindsym $mod+a focus parent

# Move the currently focused window to the scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the next scratchpad window or hide the focused scratchpad window.
# If there are multiple scratchpad windows, this command cycles through them.
bindsym $mod+minus scratchpad show

mode "resize" {
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

### Status Bar:
bar swaybar_command waybar

### Swipe gestures
# gesture: swipe up 3 gestures backward
# gesture: swipe down 3 gestures forward
# gesture: swipe right 3 swaymsg focus right
# gesture: swipe left 3 swaymsg focus left

### Swipe 4 fingers down to mute
# gesture: swipe down 4 pactl set-sink-mute @DEFAULT_SINK@ toggle

### Swipe gestures
# gesture: swipe up 3 gestures backward
# gesture: swipe down 3 gestures forward
# gesture: swipe right 3 swaymsg focus right
# gesture: swipe left 3 swaymsg focus left

### Swipe 4 fingers down to mute
# gesture: swipe down 4 pactl set-sink-mute @DEFAULT_SINK@ toggle


include /etc/sway/config.d/*
